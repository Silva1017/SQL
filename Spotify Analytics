# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 


#Creating the table:
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );


#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#First I determined the avg popularity, danceability, and energy by artist and track.
SELECT artist_name, track_name, avg(popularity), avg(danceability), avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name

#Then I determined who are the top 10 artists based on popularity.
SELECT artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10;

#Next I determined what was the average danceability of the 10 most danceable tracks and their artist.
SELECT artist_name, track_name, avg(danceability) 
FROM BIT_DB.Spotifydata
GROUP BY danceability 
LIMIT 10;

#Then I determined which artist released the longest song.
SELECT distinct artist_name, MAX(duration_ms)
FROM BIT_DB.Spotifydata
LIMIT 1;

#I determined what the average danceability is by artist and track. 
SELECT artist_name, track_name, avg(danceability)
FROM BIT_DB.Spotifydata;

#Then I determined what the average danceability for the 10 most popular songs.
SELECT track_name, MAX(popularity), avg(danceability)
FROM BIT_DB.Spotifydata
WHERE popularity > 90 
GROUP BY track_name 
LIMIT 10;





